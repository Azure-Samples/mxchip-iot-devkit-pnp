/************************************************************************************************
 * This code was automatically generated by Digital Twin Code Generator tool 0.6.8.
 * Changes to this file may cause incorrect behavior and will be lost if the code is regenerated.
 *
 * Generated Date: 3/3/2020
 ***********************************************************************************************/

#ifndef SENSORS_INTERFACE_H
#define SENSORS_INTERFACE_H

#include <stdio.h>
#include <stdlib.h>
#include <stdbool.h>
#include <string.h>
#include "digitaltwin_interface_client.h"
#include "azure_c_shared_utility/xlogging.h"
#include "azure_c_shared_utility/threadapi.h"

#include "digitaltwin_client_helper.h"
#include "digitaltwin_serializer.h"
#include "parson.h"
#include "../mxchip_iot_devkit_impl.h"

#ifdef __cplusplus
extern "C"
{
#endif

typedef enum SENSORS_TELEMETRY_TAG
{
    Sensors_HUMIDITY_TELEMETRY,
    Sensors_TEMPERATURE_TELEMETRY,
    Sensors_PRESSURE_TELEMETRY
} SENSORS_TELEMETRY;

// DigitalTwin interface name from service perspective.
static const char SensorsInterfaceId[] = "urn:mxchip:built_in_sensors:1";
static const char SensorsInterfaceInstanceName[] = "sensors";

// Telemetry names for this interface.

static const char SensorsInterface_HumidityTelemetry[] = "humidity";

static const char SensorsInterface_TemperatureTelemetry[] = "temperature";

static const char SensorsInterface_PressureTelemetry[] = "pressure";

// Property names for this interface.

// Command names for this interface

// Methods
DIGITALTWIN_INTERFACE_CLIENT_HANDLE SensorsInterface_Create();

void SensorsInterface_Close(DIGITALTWIN_INTERFACE_CLIENT_HANDLE digitalTwinInterfaceClientHandle);

DIGITALTWIN_CLIENT_RESULT SensorsInterface_Telemetry_SendAll();

#ifdef __cplusplus
}
#endif

#endif  // SENSORS_INTERFACE_H
